{"version":3,"sources":["Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","console","log","this","movie","id","medium_cover_image","prevProps","prevState","snapshot","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RA6BeA,MAzBf,YAAuD,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC1C,OAAO,sBAAKC,UAAW,QAAhB,UACH,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAW,cAAhB,UACI,oBAAIA,UAAW,eAAf,SAAgCJ,IAChC,oBAAII,UAAW,cAAf,SAA+BL,IAC/B,oBAAIK,UAAW,gBAAf,SAAiCD,EAAOI,KAAK,SAACC,EAAMC,GAAP,OACrC,oBAAgBL,UAAW,gBAA3B,SAA6CI,GAApCC,QAIjB,oBAAGL,UAAW,gBAAd,UAAgCH,EAAQS,MAAM,EAAE,KAAhD,gBCgDGC,G,wDA1BX,aAAe,IAAD,8BACV,gBAhCJC,MAAQ,CACJC,WAAY,EACZC,OAAQ,IA6BE,EAKdC,UALc,sBAKF,8BAAAC,EAAA,sEAIGC,IAAMC,IAAI,yDAJb,gBAGOJ,EAHP,EAEJK,KACIA,KAAOL,OAEf,EAAKM,SAAS,CAACN,SAAQD,WAAU,IALzB,2CAHRQ,QAAQC,IAAI,SAFF,E,0CA1Bd,WAAU,IAAD,EACsBC,KAAKX,MAAzBC,EADF,EACEA,UAAUC,EADZ,EACYA,OACjB,OACI,yBAASV,UAAW,YAApB,SACKS,EACG,qBAAKT,UAAW,SAAhB,SACI,sBAAMA,UAAW,eAAjB,2BAGA,qBAAKA,UAAW,SAAhB,SACKU,EAAOP,KAAI,SAAAiB,GAAK,OACb,cAAC,EAAD,CAEIC,GAAID,EAAMC,GACV1B,KAAMyB,EAAMzB,KACZC,MAAOwB,EAAMxB,MACbC,QAASuB,EAAMvB,QACfC,OAAQsB,EAAME,mBACdvB,OAAQqB,EAAMrB,QANTqB,EAAMC,a,+BA2B3C,WACIF,KAAKR,c,gCAGT,SAAmBY,EAAWC,EAAWC,GACrCR,QAAQC,IAAI,oB,kCAGhB,WACID,QAAQC,IAAI,e,GAtDFQ,IAAMC,YCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,EAAgBX,QAAQC,O","file":"static/js/main.16b246ac.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\"\n\nfunction Movie({year, title, summary, poster, genres}){\n    return <div className={\"movie\"}>\n        <img src={poster} alt={title} title={title} />\n        <div className={\"movie__data\"}>\n            <h3 className={\"movie__title\"}>{title}</h3>\n            <h5 className={\"movie__year\"}>{year}</h5>\n            <ul className={\"movie__genres\"}>{genres.map( (genre,index) => (\n                    <li key={index} className={\"genres__genre\"}>{genre}</li>\n                )\n            )}\n            </ul>\n            <p className={\"movie_summary\"}>{summary.slice(0,180)}...</p>\n        </div>\n    </div>\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title : PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default Movie;","import React from \"react\"\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\"\n\nclass App extends React.Component{\n    state = {\n        isLoading : true,\n        movies: []\n    };\n\n    render() {\n        const {isLoading,movies} = this.state\n        return (\n            <section className={\"container\"}>\n                {isLoading ? (\n                    <div className={\"loader\"}>\n                        <span className={\"loader__text\"}>Loading....</span>\n                </div>\n                    ) : (\n                        <div className={\"movies\"}>\n                            {movies.map(movie => (\n                                <Movie\n                                    key={movie.id}\n                                    id={movie.id}\n                                    year={movie.year}\n                                    title={movie.title}\n                                    summary={movie.summary}\n                                    poster={movie.medium_cover_image}\n                                    genres={movie.genres}\n                                />\n                            ))}\n                        </div>\n                )}\n            </section>)\n    }\n\n    constructor() {\n        super();\n        console.log('hello')\n    }\n\n    getMovies = async () => {\n        const {\n            data:{\n                data:{ movies }\n        }} = await axios.get('https://yts.mx/api/v2/list_movies.json?sort_by=rating');\n        this.setState({movies, isLoading:false})\n    }\n\n    componentDidMount() {\n        this.getMovies();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        console.log('I Just updated')\n    }\n\n    componentWillUnmount() {\n        console.log('Goodbye')\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}